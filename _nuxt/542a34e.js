(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{234:function(t,e,n){var o=n(8);o(o.P,"Array",{fill:n(235)}),n(80)("fill")},235:function(t,e,n){"use strict";var o=n(35),h=n(105),r=n(18);t.exports=function(t){for(var e=o(this),n=r(e.length),l=arguments.length,c=h(l>1?arguments[1]:void 0,n),d=l>2?arguments[2]:void 0,f=void 0===d?n:h(d,n);f>c;)e[c++]=t;return e}},266:function(t,e,n){"use strict";n.r(e);var o=n(12),h=n(211),r=n(212),l=n(208),c=n(101),d=n(102),f=(n(234),n(209),n(210)),v=n.n(f);function y(t){var e=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}();return function(){var n,o=Object(l.a)(t);if(e){var h=Object(l.a)(this).constructor;n=Reflect.construct(o,arguments,h)}else n=o.apply(this,arguments);return Object(r.a)(this,n)}}var k={mounted:function(){var t,e=16777215,n=f(),r=f()/26,l=16711935;function f(){var t=window.innerWidth/3;return t>600&&(t=600),t}var k=function(){function t(e){Object(c.a)(this,t),this.rank=new Array(e).fill(0),this.parent=[];for(var i=0;i<e;i++)this.parent.push(i)}return Object(d.a)(t,[{key:"findSet",value:function(i){return this.parent[i]===i?i:(this.parent[i]=this.findSet(this.parent[i]),this.parent[i])}},{key:"isSameSet",value:function(i,t){return this.findSet(i)===this.findSet(t)}},{key:"unionSet",value:function(i,t){i=this.findSet(i),t=this.findSet(t),this.isSameSet(i,t)||(this.rank[i]>this.rank[t]?this.parent[t]=i:(this.parent[i]=t,this.rank[i]===this.rank[t]&&this.rank[t]++))}}]),t}();function m(t,e){return Math.floor(Math.random()*(e-t)+t)}var x=function(f){Object(h.a)(w,f);var x=y(w);function w(){return Object(c.a)(this,w),x.call(this,"SceneMain")}return Object(d.a)(w,[{key:"reset",value:function(){var t=this;null!=this.goalText&&this.goalText.destroy(),this.edgeList=[],this.id=0,this.userweight=0,this.hoverNode=null,null!=this.hoverline&&(this.hoverline.destroy(),this.hoverline=null);for(var i=0;i<this.lines.length;i++)this.lines[i].destroy();for(var o=0;o<this.nodes.length;o++)this.nodes[o].destroy();this.nodes=new Array(this.nodecount),this.lines=[];for(var h=function(o){do{c=m(r,n-r),d=m(r,n-r)}while(t.isOccupied(c,d));t.nodes.forEach((function(element,e){var n=t.distSquared(c,d,element.x,element.y);t.edgeList.push([n,e,o])})),t.nodes[o]=t.add.circle(c,d,r,e).setInteractive(),t.nodes[o].inputEnabled=!0,t.nodes[o].on("pointerover",t.onHover,t),t.nodes[o].on("pointerout",t.onPointerOut,t)},l=0;l<this.nodecount;l++){var c,d;h(l)}this.kruskal(),this.state=0}},{key:"distSquared",value:function(t,e,n,o){return Math.pow(t-n,2)+Math.pow(e-o,2)}},{key:"distance",value:function(t,e,n,o){return Math.sqrt(this.distSquared(t,e,n,o))}},{key:"onPointerOut",value:function(n){null!=this.hoverline&&(this.hoverline.destroy(),this.hoverline=null),null!=this.hoverNode&&this.hoverNode!==t&&(this.hoverNode.fillColor=e,this.hoverNode=null)}},{key:"onHover",value:function(e){if(null!=t)for(var i=0;i<this.nodes.length;i++)if(this.distance(e.x,e.y,this.nodes[i].x,this.nodes[i].y)<1.5*r)return this.hoverline=this.add.line(0,0,this.nodes[i].x,this.nodes[i].y,t.x,t.y,255).setOrigin(0,0),this.nodes[i].fillColor=l,void(this.hoverNode=this.nodes[i])}},{key:"isOccupied",value:function(t,e){if(t<400&&e>500)return!0;for(var i=0;i<this.nodes.length;i++)if(void 0!==this.nodes[i]&&this.distance(t,e,this.nodes[i].x,this.nodes[i].y)<=3*r)return!0;return!1}},{key:"onMouseDown",value:function(n,o){if(0!==o.length){if(0===this.state)(t=o[0]).fillColor=l,this.state++;else{if(t.fillColor=e,null!=this.hoverNode&&(this.hoverNode.fillColor=e,this.hoverNode=null),this.to=o[0],this.state=0,this.to!==t){for(var line=new v.a.Geom.Line(t.x,t.y,this.to.x,this.to.y),h=new v.a.Geom.Line(this.to.x,this.to.y,t.x,t.y),i=0;i<this.lines.length;i++)if(v.a.Geom.Line.Equals(line,this.lines[i].geom)||v.a.Geom.Line.Equals(h,this.lines[i].geom))return this.userweight-=this.distSquared(t.x,t.y,this.to.x,this.to.y),this.lines[i].destroy(),this.lines.splice(i,1),this.to=null,t=null,null!=this.hoverline&&(this.hoverline.destroy(),this.hoverline=null),void this.goalCheck();this.lines.push(this.add.line(0,0,t.x,t.y,this.to.x,this.to.y,65280).setOrigin(0,0)),this.userweight+=this.distSquared(t.x,t.y,this.to.x,this.to.y)}this.to=null,t=null}this.goalCheck()}}},{key:"goalCheck",value:function(){if(this.hintText.setText(this.userweight>this.weight?"Verbindungen zu lang!":""),this.lines.length===this.nodecount-1&&Math.abs(this.userweight-this.weight)<Math.floor(.01*this.weight)){switch(this.hintText.setText(""),this.nodecount){case 4:this.score=Math.max(this.score,1);break;case 7:this.score=Math.max(this.score,2);break;case 10:this.score=Math.max(this.score,3);break;case 13:this.score=Math.max(this.score,4);break;case 16:this.score=Math.max(this.score,5)}this.nodecount=Math.min(20,this.nodecount+1),this.goalText=this.add.text(n/2-24-48,n-72,"Richtig!",{font:"48px Arial"}),this.time.delayedCall(1e3,this.reset,[],this)}}},{key:"preload",value:function(){}},{key:"create",value:function(){this.nodecount=4,this.score=0,this.goalText=null,this.nodes=[],this.lines=[],t=null,this.to=null,this.hoverline=null,this.reset(),this.hintText=this.add.text(25,n-50,"",{font:"32px Arial"}),this.input.on("pointerdown",this.onMouseDown,this)}},{key:"update",value:function(){}},{key:"kruskal",value:function(){var t=this;this.weight=0;var e=new k(this.nodecount);this.edgeList.sort((function(a,b){var t=Object(o.a)(a,3),e=t[0],n=(t[1],t[2],Object(o.a)(b,3)),h=n[0];n[1],n[2];return e-h})),this.edgeList.forEach((function(element){var n=Object(o.a)(element,3),h=n[0],u=n[1],r=n[2];e.isSameSet(u,r)||(t.weight+=h,e.unionSet(u,r))}))}}]),w}(v.a.Scene),w={type:v.a.AUTO,parent:"path",width:n,height:n,scene:x,backgroundColor:4473924};new v.a.Game(w)}},m=n(11),component=Object(m.a)(k,(function(){var t=this,e=t.$createElement;t._self._c;return t._m(0)}),[function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("div",{staticStyle:{"text-align":"left"}},[n("div",{staticClass:"columns is-vcentered"},[n("div",{staticClass:"column is-offset-1"},[n("p",[t._v("\n        Verbinde alle Knoten zu einem Netz, bei dem die Gesamtlänge aller\n        Verbindungen möglichst kurz ist. Jeder Knoten muss mit mindestens\n        einem anderen Knoten verbunden werden. Um einen Knoten mit einem\n        anderen zu verbinden, klickst du zuerst auf den einen, dann auf den\n        anderen Knoten. Auf die gleiche Art kannst du Verbindungen rückgängig\n        machen.\n      ")])]),t._v(" "),n("div",{staticClass:"column is-two-thirds"},[n("div",{attrs:{id:"path"}})])])])}],!1,null,null,null);e.default=component.exports}}]);